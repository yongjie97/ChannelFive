{"ast":null,"code":"import { useVuelidate } from '@vuelidate/core';\nimport { required, email, minLength, maxLength, numeric } from '@vuelidate/validators';\nexport default {\n  name: 'Register',\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      email: null,\n      password: null,\n      displayName: null,\n      zipCode: null,\n      message: null\n    };\n  },\n  validations: {\n    email: {\n      required,\n      email\n    },\n    password: {\n      required\n    },\n    displayName: {\n      required\n    },\n    zipCode: {\n      required,\n      numeric,\n      minLength: minLength(6),\n      maxLength: maxLength(6)\n    }\n  },\n  methods: {\n    submit: function (e) {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        var registerForm = new FormData();\n        registerForm.append('email', this.email);\n        registerForm.append('password', this.password);\n        registerForm.append('displayName', this.displayName);\n        registerForm.append('zipCode', this.zipCode);\n        axios({\n          method: 'post',\n          url: \"http://localhost:8080/register\",\n          data: registerForm,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          withCredentials: true\n        }).then(res => {\n          alert('Successfully Registered');\n        }).catch(error => {\n          alert('API is currently down.');\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA+DI,SAASA,YAAW,QAAS,iBAAgB;AAC7C,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,OAAM,QAAS,uBAAsB;AAErF,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,KAAI,GAAK;IACL,OAAO;MAAEC,EAAE,EAAER,YAAY;IAAG;EAChC,CAAC;EACDS,IAAI,GAAG;IACH,OAAO;MACHP,KAAK,EAAE,IAAI;MACXQ,QAAQ,EAAE,IAAI;MACdC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,WAAW,EAAE;IACTZ,KAAK,EAAE;MACLD,QAAQ;MACRC;IACF,CAAC;IACDQ,QAAQ,EAAE;MACRT;IACF,CAAC;IACDU,WAAW,EAAE;MACXV;IACF,CAAC;IACDW,OAAO,EAAE;MACPX,QAAQ;MACRI,OAAO;MACPF,SAAS,EAAEA,SAAS,CAAC,CAAC,CAAC;MACvBC,SAAS,EAAEA,SAAS,CAAC,CAAC;IACxB;EACJ,CAAC;EACDW,OAAO,EAAE;IACLC,MAAM,EAAE,UAASC,CAAC,EAAE;MAChB,IAAI,CAACT,EAAE,CAACU,SAAS,EAAC;MAClB,IAAI,CAAC,IAAI,CAACV,EAAE,CAACW,MAAM,EAAE;QACjB,IAAIC,YAAW,GAAI,IAAIC,QAAQ,EAAE;QACjCD,YAAY,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACpB,KAAK,CAAC;QACxCkB,YAAY,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACZ,QAAQ,CAAC;QAC9CU,YAAY,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACX,WAAW,CAAC;QACpDS,YAAY,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAACV,OAAO,CAAC;QAC5CW,KAAK,CAAC;UAAEC,MAAM,EAAC,MAAM;UACjBC,GAAG,EAAE,gCAAgC;UACrChB,IAAI,EAAEW,YAAY;UAClBM,OAAO,EAAE;YAAC,cAAc,EAAC;UAAqB,CAAC;UAC/CC,eAAe,EAAE;QACrB,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;UACbC,KAAK,CAAC,yBAAyB,CAAC;QACpC,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;UAChBF,KAAK,CAAC,wBAAwB,CAAC;QACnC,CAAC;MACL;IACJ;EACJ;AACJ","names":["useVuelidate","required","email","minLength","maxLength","numeric","name","setup","v$","data","password","displayName","zipCode","message","validations","methods","submit","e","$validate","$error","registerForm","FormData","append","axios","method","url","headers","withCredentials","then","res","alert","catch","error"],"sourceRoot":"","sources":["/Users/yj/Documents/test-project/src/views/account/Register.vue"],"sourcesContent":["<template>\n    <section class=\"vh-110\" style=\"background-color: #E0E0E0;\">\n            <div class=\"container py-5 h-110\">\n              <div class=\"row d-flex justify-content-center align-items-center h-100\">\n                <div class=\"col col-xl-10\">\n                  <div class=\"card\">\n                    <div class=\"row g-0\">\n                      <div class=\"col-md-6 col-lg-5 d-flex align-items-center bg-custom\">\n                        <div class=\"text-white py-4 p-md-5 mx-md-4 mx-4\">\n                            <h4 class=\"mb-4 \">Join the EasyUni Community</h4>\n                            <p class=\"small mb-0\">You will be able to partake in discussions and post reviews for university courses!</p>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6 col-lg-7 d-flex align-items-center\">\n                        <div class=\"card-body p-4 p-lg-5 text-black\">\n          \n                          <form id=\"registerForm\" @submit.prevent=\"submit\">\n                            <h4 class=\"fw-normal mb-3 pb-3\" style=\"letter-spacing: 1px;\">Register Account</h4>\n                            <p class=\"fw-normal mb-3 alert alert-danger\" v-if=\"message\">{{ message }}</p>\n          \n                            <div class=\"form-outline mb-4\">\n                                <label class=\"form-label\" for=\"email\">Email address*</label>\n                                <input type=\"email\" id=\"email\" v-model=\"email\" name=\"email\" class=\"form-control form-control-lg\" :class=\"{ 'border-danger': v$.email.$error }\" />\n                                <div class=\"form-label text-danger\" v-if=\"v$.email.$error\">Please enter a valid email</div>\n                            </div>\n          \n                            <div class=\"form-outline mb-4\">\n                                <label class=\"form-label\" for=\"password\">Password*</label>\n                                <input type=\"password\" id=\"password\" v-model=\"password\" name=\"password\" class=\"form-control form-control-lg\" :class=\"{ 'border-danger': v$.password.$error }\" />\n                                <div class=\"form-label text-danger\" v-if=\"v$.password.$error\">Please enter a valid password</div>\n                            </div>\n    \n                            <div class=\"form-outline mb-4\">\n                                <label class=\"form-label\" for=\"displayName\">Display Name*</label>\n                                <input type=\"text\" id=\"displayName\" v-model=\"displayName\" name=\"displayName\" class=\"form-control form-control-lg\" :class=\"{ 'border-danger': v$.displayName.$error }\" />\n                                <div class=\"form-label text-danger\" v-if=\"v$.displayName.$error\">Please enter a display name</div>\n                            </div>\n    \n                            <div class=\"form-outline mb-4\">\n                                <label class=\"form-label\" for=\"zipCode\">Zip Code*</label>\n                                <input type=\"text\" id=\"zipCode\" v-model=\"zipCode\" name=\"zipCode\" class=\"form-control form-control-lg\" :class=\"{ 'border-danger': v$.zipCode.$error }\" />\n                                <div class=\"form-label text-danger\" v-if=\"v$.zipCode.$error\">Please enter valid zip code</div>\n                            </div>\n          \n                            <div class=\"pt-1 mb-4\">\n                              <input class=\"btn btn-warning text-white btn-lg btn-block\" type=\"submit\" value=\"Register\"/>\n                            </div>\n          \n                            <p class=\"mb-5 pb-lg-2 text-muted\">Already have an account? <a href=\"/login\" class=\"text-muted\">Login</a></p>\n                          </form>\n          \n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n</template>\n\n<script>    \n\n    import { useVuelidate } from '@vuelidate/core'\n    import { required, email, minLength, maxLength, numeric } from '@vuelidate/validators'\n\n    export default {\n        name: 'Register',\n        setup () {\n            return { v$: useVuelidate() }\n        },\n        data() {\n            return {\n                email: null,\n                password: null,\n                displayName: null,\n                zipCode: null,\n                message: null,\n            }\n        },\n        validations: {\n            email: {\n              required,\n              email\n            },\n            password: {\n              required\n            },\n            displayName: {\n              required\n            },\n            zipCode: {\n              required,\n              numeric,\n              minLength: minLength(6),\n              maxLength: maxLength(6)\n            }\n        },\n        methods: {\n            submit: function(e) {\n                this.v$.$validate()\n                if (!this.v$.$error) {\n                    var registerForm = new FormData();\n                    registerForm.append('email', this.email);\n                    registerForm.append('password', this.password);\n                    registerForm.append('displayName', this.displayName);\n                    registerForm.append('zipCode', this.zipCode);\n                    axios({ method:'post', \n                        url: \"http://localhost:8080/register\", \n                        data: registerForm, \n                        headers: {\"Content-Type\":\"multipart/form-data\"},\n                        withCredentials: true\n                    }).then((res) => {\n                        alert('Successfully Registered');\n                    }).catch((error) => {\n                        alert('API is currently down.');\n                    })\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .bg-custom {\n        background-image: url('../../assets/image/register.jpg')\n    }\n\n</style>"]},"metadata":{},"sourceType":"module"}