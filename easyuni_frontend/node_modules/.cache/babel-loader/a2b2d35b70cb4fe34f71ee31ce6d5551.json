{"ast":null,"code":"import { useVuelidate } from '@vuelidate/core';\nimport { required, email, minLength } from '@vuelidate/validators';\nexport default {\n  name: 'Login',\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      email: null,\n      password: null\n    };\n  },\n  validations: {\n    email: {\n      required,\n      email\n    },\n    password: {\n      required,\n      minLength: minLength(8)\n    }\n  },\n  methods: {\n    login: function (e) {\n      this.v$.$validate(); // checks all inputs\n      if (!this.v$.$error) {\n        var loginForm = new FormData();\n        loginForm.append('email', this.formEmail);\n        loginForm.append('password', this.formPassword);\n        axios({\n          method: 'post',\n          url: \"http://localhost:8080/login\",\n          data: loginForm,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        }).then(res => {\n          alert(res.data.message);\n        }).catch(error => {\n          alert('API is currently down.');\n        });\n      } else {\n        alert(this.v$.$errors[0].$message);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAkDI,SAASA,YAAW,QAAS,iBAAgB;AAC7C,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAsB;AAEjE,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,KAAI,GAAK;IACL,OAAO;MAAEC,EAAE,EAAEN,YAAY;IAAG;EAChC,CAAC;EACDO,IAAI,GAAG;IACH,OAAO;MACHL,KAAK,EAAE,IAAI;MACXM,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,WAAW,EAAE;IACTP,KAAK,EAAE;MACHD,QAAQ;MACRC;IACJ,CAAC;IACDM,QAAQ,EAAE;MACNP,QAAQ;MACRE,SAAS,EAAEA,SAAS,CAAC,CAAC;IAC1B;EACJ,CAAC;EACDO,OAAO,EAAE;IACLC,KAAK,EAAE,UAASC,CAAC,EAAE;MACf,IAAI,CAACN,EAAE,CAACO,SAAS,EAAC,EAAE;MACpB,IAAI,CAAC,IAAI,CAACP,EAAE,CAACQ,MAAM,EAAE;QACjB,IAAIC,SAAQ,GAAI,IAAIC,QAAQ,EAAE;QAC9BD,SAAS,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACC,SAAS,CAAC;QACzCH,SAAS,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACE,YAAY,CAAC;QAC/CC,KAAK,CAAC;UAAEC,MAAM,EAAC,MAAM;UACjBC,GAAG,EAAE,6BAA6B;UAClCf,IAAI,EAAEQ,SAAS;UACfQ,OAAO,EAAE;YAAC,cAAc,EAAC;UAAqB;QAClD,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;UACbC,KAAK,CAACD,GAAG,CAAClB,IAAI,CAACoB,OAAO;QAC1B,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;UAChBH,KAAK,CAAC,wBAAwB,CAAC;QACnC,CAAC;MACL,OAAO;QACHA,KAAK,CAAC,IAAI,CAACpB,EAAE,CAACwB,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ;MACrC;IACJ;EACJ;AACJ","names":["useVuelidate","required","email","minLength","name","setup","v$","data","password","validations","methods","login","e","$validate","$error","loginForm","FormData","append","formEmail","formPassword","axios","method","url","headers","then","res","alert","message","catch","error","$errors","$message"],"sourceRoot":"","sources":["/Users/yj/Documents/test-project/src/views/account/Login.vue"],"sourcesContent":["<template>\n    <section class=\"vh-100\" style=\"background-color: #E0E0E0;\">\n            <div class=\"container py-5 h-100\">\n            <div class=\"row d-flex justify-content-center align-items-center h-100\">\n                <div class=\"col col-xl-10\">\n                <div class=\"card\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-md-6 col-lg-5 d-flex align-items-center bg-custom\">\n                            <div class=\"text-white py-4 p-md-5 mx-md-4 mx-4\">\n                            <h4 class=\"mb-4 \">Login to join discussions</h4>\n                            <p class=\"small mb-0\">Gain access to our popular discussion boards with countless topics to begin your university journey.</p>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-lg-7 d-flex align-items-center\">\n                        <div class=\"card-body p-4 p-lg-5 text-black\">\n        \n                        <form id=\"loginForm\" @submit.prevent=\"login\">\n                            <h4 class=\"fw-normal mb-3 pb-3\" style=\"letter-spacing: 1px;\">Sign into your account</h4>\n        \n                            <div class=\"form-outline mb-4\">\n                            <div class=\"error text-muted\" v-if=\"v$.email.$error\">Field is required</div>\n                            <input type=\"email\" id=\"email\" v-model=\"email\" name=\"email\" class=\"form-control form-control-lg border-danger\" />\n                            <label class=\"form-label\" for=\"email\">Email address</label>\n                            </div>\n        \n                            <div class=\"form-outline mb-4\">\n                            <input type=\"password\" id=\"password\" v-model=\"password\" name=\"password\" class=\"form-control form-control-lg\" />\n                            <label class=\"form-label\" for=\"password\">Password</label>\n                            </div>\n        \n                            <div class=\"pt-1 mb-4\">\n                                <input class=\"btn btn-warning btn-lg btn-block text-white\" type=\"submit\" value=\"Login\"/>\n                            </div>\n        \n                            <a class=\"small text-muted\" href=\"/forgot_password\">Forgot password?</a>\n                            <p class=\"mb-5 pb-lg-2 text-dark\">Don't have an account? <a class=\"text-dark\" href=\"/register\">Register here</a></p>\n                        </form>\n        \n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </section>\n</template>\n    \n<script>    \n\n    import { useVuelidate } from '@vuelidate/core'\n    import { required, email, minLength } from '@vuelidate/validators'\n\n    export default {\n        name: 'Login',\n        setup () {\n            return { v$: useVuelidate() }\n        },\n        data() {\n            return {\n                email: null,\n                password: null,\n            }\n        },\n        validations: {\n            email: {\n                required,\n                email\n            },\n            password: {\n                required,\n                minLength: minLength(8)\n            }\n        },\n        methods: {\n            login: function(e) {\n                this.v$.$validate() // checks all inputs\n                if (!this.v$.$error) {\n                    var loginForm = new FormData();\n                    loginForm.append('email', this.formEmail);\n                    loginForm.append('password', this.formPassword);\n                    axios({ method:'post', \n                        url: \"http://localhost:8080/login\", \n                        data: loginForm, \n                        headers: {\"Content-Type\":\"multipart/form-data\"}\n                    }).then((res) => {\n                        alert(res.data.message)\n                    }).catch((error) => {\n                        alert('API is currently down.');\n                    })\n                } else {\n                    alert(this.v$.$errors[0].$message)\n                }\n            }\n        },\n    }\n</script>\n\n<style scoped>\n    .bg-custom {\n        background-image: url('../../assets/image/login.jpg')\n    }\n\n</style>"]},"metadata":{},"sourceType":"module"}