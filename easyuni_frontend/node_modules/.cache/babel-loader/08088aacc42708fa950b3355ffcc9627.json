{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useVuelidate } from '@vuelidate/core';\nimport { required } from '@vuelidate/validators';\nexport default {\n  name: 'ChangePassword',\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      oldPassword: '',\n      newPassword: '',\n      successMessage: null,\n      failMessage: null\n    };\n  },\n  validations: {\n    oldPassword: {\n      required\n    },\n    newPassword: {\n      required\n    }\n  },\n  mounted() {\n    axios({\n      method: 'get',\n      url: \"http://localhost:8080/profile/retrieve\",\n      withCredentials: true\n    }).then(response => {\n      if (response != null) {\n        this.email = response.data.data.email;\n        this.displayName = response.data.data.displayName;\n        this.zipCode = response.data.data.zipCode;\n      }\n    }).catch(error => {\n      this.failMessage = \"Opps! Something went wrong. Please try again later.\";\n      this.successMessage = null;\n    });\n  },\n  methods: {\n    submit: function (e) {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        var passwordForm = new FormData();\n        passwordForm.append('oldPassword', this.oldPassword);\n        passwordForm.append('newPassword', this.newPassword);\n        axios({\n          method: 'post',\n          url: \"http://localhost:8080/profile/password\",\n          data: passwordForm,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          withCredentials: true\n        }).then(res => {\n          if (res.data.success) {\n            this.successMessage = res.data.message;\n            this.failMessage = null;\n            this.$router.push('/profile');\n          } else {\n            this.failMessage = res.data.message;\n            this.successMessage = null;\n          }\n        }).catch(error => {\n          this.failMessage = \"Opps! Something went wrong. Please try again later.\";\n          this.successMessage = null;\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA0CI,SAASA,YAAW,QAAS,iBAAgB;AAC7C,SAASC,QAAO,QAAS,uBAAsB;AAE/C,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,KAAI,GAAK;IACL,OAAO;MAAEC,EAAE,EAAEJ,YAAY;IAAG;EAChC,CAAC;EACDK,IAAI,GAAG;IACH,OAAO;MACHC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE,IAAI;MACpBC,WAAW,EAAE;IACjB;EACJ,CAAC;EACDC,WAAW,EAAE;IACTJ,WAAW,EAAE;MACXL;IACF,CAAC;IACDM,WAAW,EAAE;MACXN;IACF;EACJ,CAAC;EACDU,OAAO,GAAG;IACNC,KAAK,CAAC;MAACC,MAAM,EAAC,KAAK;MACXC,GAAG,EAAE,wCAAwC;MAC7CC,eAAe,EAAE;IACzB,CAAC,EACAC,IAAI,CAACC,QAAO,IAAK;MACd,IAAIA,QAAO,IAAK,IAAI,EAAE;QAClB,IAAI,CAACC,KAAI,GAAID,QAAQ,CAACZ,IAAI,CAACA,IAAI,CAACa,KAAI;QACpC,IAAI,CAACC,WAAU,GAAIF,QAAQ,CAACZ,IAAI,CAACA,IAAI,CAACc,WAAU;QAChD,IAAI,CAACC,OAAM,GAAIH,QAAQ,CAACZ,IAAI,CAACA,IAAI,CAACe,OAAM;MAC5C;IACJ,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAI,CAACb,WAAU,GAAI,qDAAoD;MACvE,IAAI,CAACD,cAAa,GAAI,IAAG;IAC7B,CAAC;EACL,CAAC;EACDe,OAAO,EAAE;IACLC,MAAM,EAAE,UAASC,CAAC,EAAE;MAChB,IAAI,CAACrB,EAAE,CAACsB,SAAS,EAAC;MAClB,IAAI,CAAC,IAAI,CAACtB,EAAE,CAACuB,MAAM,EAAE;QACjB,IAAIC,YAAW,GAAI,IAAIC,QAAQ,EAAE;QACjCD,YAAY,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACxB,WAAW,CAAC;QACpDsB,YAAY,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACvB,WAAW,CAAC;QACpDK,KAAK,CAAC;UAAEC,MAAM,EAAC,MAAM;UACjBC,GAAG,EAAE,wCAAwC;UAC7CT,IAAI,EAAEuB,YAAY;UAClBG,OAAO,EAAE;YAAC,cAAc,EAAC;UAAqB,CAAC;UAC/ChB,eAAe,EAAE;QACrB,CAAC,CAAC,CAACC,IAAI,CAAEgB,GAAG,IAAK;UACf,IAAIA,GAAG,CAAC3B,IAAI,CAAC4B,OAAO,EAAE;YAClB,IAAI,CAACzB,cAAa,GAAIwB,GAAG,CAAC3B,IAAI,CAAC6B,OAAM;YACrC,IAAI,CAACzB,WAAU,GAAI,IAAG;YACtB,IAAI,CAAC0B,OAAO,CAACC,IAAI,CAAC,UAAU;UAChC,OAAO;YACH,IAAI,CAAC3B,WAAU,GAAIuB,GAAG,CAAC3B,IAAI,CAAC6B,OAAM;YAClC,IAAI,CAAC1B,cAAa,GAAI,IAAG;UAC7B;QACF,CAAC,CAAC,CAACa,KAAK,CAAEC,KAAK,IAAK;UAChB,IAAI,CAACb,WAAU,GAAI,qDAAoD;UACvE,IAAI,CAACD,cAAa,GAAI,IAAG;QAC7B,CAAC;MACL;IACJ;EACJ;AACJ","names":["useVuelidate","required","name","setup","v$","data","oldPassword","newPassword","successMessage","failMessage","validations","mounted","axios","method","url","withCredentials","then","response","email","displayName","zipCode","catch","error","methods","submit","e","$validate","$error","passwordForm","FormData","append","headers","res","success","message","$router","push"],"sourceRoot":"","sources":["/Users/yj/Documents/test-project/src/views/account/ChangePassword.vue"],"sourcesContent":["<template>\n            <section class=\"vh-100\" style=\"background-color: #E0E0E0;\">\n            <div class=\"container py-5 h-100\">\n            <div class=\"row d-flex justify-content-center h-100\">\n                <div class=\"col col-xl-7\">\n                <div class=\"card\">\n                    <div class=\"row\">\n                    <div class=\"d-flex\">\n                        <div class=\"card-body p-4 p-lg-5 text-black\">\n                        <form id=\"profileForm\" @submit.prevent=\"submit\">    \n                            <h4 class=\"fw-normal mb-4 \"><strong>Change Password</strong></h4>     \n                            <p class=\"fw-normal mb-3 alert alert-success\" v-if=\"successMessage\">{{ successMessage }}</p>\n                            <p class=\"fw-normal mb-3 alert alert-danger\" v-if=\"failMessage\">{{ failMessage }}</p>\n          \n                            <div class=\"form-outline mb-4\">\n                                <label class=\"form-label\" for=\"oldPassword\">Old Password</label>\n                                <input type=\"password\" id=\"oldPassword\" v-model=\"oldPassword\" name=\"oldPassword\" class=\"form-control form-control-lg\" :class=\"{ 'border-danger': v$.oldPassword.$error }\" />\n                                <div class=\"form-label text-danger\" v-if=\"v$.oldPassword.$error\">Please enter your old password</div>\n                            </div>   \n\n                            <div class=\"form-outline mb-4\">\n                                <label class=\"form-label\" for=\"newPassword\">New Password</label>\n                                <input type=\"password\" id=\"newPassword\" v-model=\"newPassword\" name=\"newPassword\" class=\"form-control form-control-lg\" :class=\"{ 'border-danger': v$.newPassword.$error }\" />\n                                <div class=\"form-label text-danger\" v-if=\"v$.newPassword.$error\">Please enter a new password</div>\n                            </div> \n\n                            <div class=\"pt-3\">\n                                <input class=\"btn btn-warning text-white btn-lg btn-block\" type=\"submit\" value=\"Change Password\" />\n                            </div>\n                        </form>\n        \n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </section>\n</template>\n      \n<script>    \n    import { useVuelidate } from '@vuelidate/core'\n    import { required } from '@vuelidate/validators'\n\n    export default {\n        name: 'ChangePassword',\n        setup () {\n            return { v$: useVuelidate() }\n        },\n        data() {\n            return {\n                oldPassword: '',\n                newPassword: '',\n                successMessage: null,\n                failMessage: null,\n            }\n        },\n        validations: {\n            oldPassword: {\n              required\n            },\n            newPassword: {\n              required\n            }\n        },\n        mounted() {\n            axios({method:'get', \n                    url: \"http://localhost:8080/profile/retrieve\", \n                    withCredentials: true\n            })\n            .then(response => {\n                if (response != null) {\n                    this.email = response.data.data.email\n                    this.displayName = response.data.data.displayName\n                    this.zipCode = response.data.data.zipCode\n                }\n            }).catch((error) => {\n                this.failMessage = \"Opps! Something went wrong. Please try again later.\"\n                this.successMessage = null\n            })\n        },\n        methods: {\n            submit: function(e) {\n                this.v$.$validate()\n                if (!this.v$.$error) {\n                    var passwordForm = new FormData();\n                    passwordForm.append('oldPassword', this.oldPassword);\n                    passwordForm.append('newPassword', this.newPassword);\n                    axios({ method:'post', \n                        url: \"http://localhost:8080/profile/password\", \n                        data: passwordForm, \n                        headers: {\"Content-Type\":\"multipart/form-data\"},\n                        withCredentials: true\n                    }).then((res) => {\n                      if (res.data.success) {\n                          this.successMessage = res.data.message\n                          this.failMessage = null\n                          this.$router.push('/profile') \n                      } else {\n                          this.failMessage = res.data.message\n                          this.successMessage = null\n                      }\n                    }).catch((error) => {\n                        this.failMessage = \"Opps! Something went wrong. Please try again later.\"\n                        this.successMessage = null\n                    })\n                }\n            }\n        }\n    }\n</script>\n"]},"metadata":{},"sourceType":"module"}